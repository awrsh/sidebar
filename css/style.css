@font-face {
  font-family: IRANSans;
  font-style: normal;
  font-weight: 900;
  src: url("../fonts/iransans/eot/IRANSansWeb_Black.eot");
  src: url("../fonts/iransans/eot/IRANSansWeb_Black.eot?#iefix")
      format("embedded-opentype"),
    url("../fonts/iransans/woff2/IRANSansWeb_Black.woff2") format("woff2"),
    url("../fonts/iransans/woff/IRANSansWeb_Black.woff") format("woff"),
    url("../fonts/iransans/ttf/IRANSansWeb_Black.ttf") format("truetype");
}
@font-face {
  font-family: IRANSans;
  font-style: normal;
  font-weight: bold;
  src: url("../fonts/iransans/eot/IRANSansWeb_Bold.eot");
  src: url("../fonts/iransans/eot/IRANSansWeb_Bold.eot?#iefix")
      format("embedded-opentype"),
    url("../fonts/iransans/woff2/IRANSansWeb_Bold.woff2") format("woff2"),
    url("../fonts/iransans/woff/IRANSansWeb_Bold.woff") format("woff"),
    url("../fonts/iransans/ttf/IRANSansWeb_Bold.ttf") format("truetype");
}

@font-face {
  font-family: IRANSans;
  font-style: normal;
  font-weight: 300;
  src: url("../fonts/iransans/eot/IRANSansWeb_Light.eot");
  src: url("../fonts/iransans/eot/IRANSansWeb_Light.eot?#iefix")
      format("embedded-opentype"),
    url("../fonts/iransans/woff2/IRANSansWeb_Light.woff2") format("woff2"),
    url("../fonts/iransans/woff/IRANSansWeb_Light.woff") format("woff"),
    url("../fonts/iransans/ttf/IRANSansWeb_Light.ttf") format("truetype");
}
@font-face {
  font-family: IRANSans;
  font-style: normal;
  font-weight: 200;
  src: url("../fonts/iransans/eot/IRANSansWeb_UltraLight.eot");
  src: url("../fonts/iransans/eot/IRANSansWeb_UltraLight.eot?#iefix")
      format("embedded-opentype"),
    url("../fonts/iransans/woff2/IRANSansWeb_UltraLight.woff2") format("woff2"),
    url("../fonts/iransans/woff/IRANSansWeb_UltraLight.woff") format("woff"),
    url("../fonts/iransans/ttf/IRANSansWeb_UltraLight.ttf") format("truetype");
}
@font-face {
  font-family: IRANSans;
  font-style: normal;
  font-weight: normal;
  src: url("../fonts/iransans/eot/IRANSansWeb.eot");
  src: url("../fonts/iransans/eot/IRANSansWeb.eot?#iefix")
      format("embedded-opentype"),
    url("../fonts/iransans/woff2/IRANSansWeb.woff2") format("woff2"),
    url("../fonts/iransans/woff/IRANSansWeb.woff") format("woff"),
    url("../fonts/iransans/ttf/IRANSansWeb.ttf") format("truetype");
}

@font-face {
  font-family: IRANSans;
  font-style: normal;
  font-weight: 500;
  src: url("../fonts/iransans/eot/IRANSansWeb_Medium.eot");
  src: url("../fonts/iransans/eot/IRANSansWeb_Medium.eot?#iefix")
      format("embedded-opentype"),
    url("../fonts/iransans/woff2/IRANSansWeb_Medium.woff2") format("woff2"),
    url("../fonts/iransans/woff/IRANSansWeb_Medium.woff") format("woff"),
    url("../fonts/iransans/ttf/IRANSansWeb_Medium.ttf") format("truetype");
}
* {
  font-family: IRANSans !important;
}
:root {
  --dark-pink: #150721;
  --color-white: #fff;
  --header-height: 64px;
  --sidebar-width: 100px;
  --sidebar-open-width: 300px;
}
* {
  box-sizing: border-box;
  direction: rtl;
}
ul {
  margin: 0;
  padding: 0;
}
li {
  list-style: none;
}
a:hover {
  text-decoration: none;
}
p {
  margin: 0;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}
html,
body {
  margin: 0;
  font-size: 14px;
  background-color: var(--dark-pink);
  color: white;
  padding-top: calc(var(--header-height) / 2);
  transition: 0.2s;
  height: 100%;
  font-family: IRANsans;
}
header {
  background-color: var(--dark-pink);
  height: var(--header-height);
  padding-inline: 24px;
  font-size: 1.3rem;
  border-bottom: 1px solid #555;
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  z-index: 350;
}
.header-container {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.header-container .right {
  display: flex;
  align-items: center;
}
.header-container .right .user-info {
  font-size: 0.9rem;
  text-align: center;
  margin: 0 0.5rem;
}

.header-container .avatar {
  font-size: 2.3rem;
  margin-left: 8px;
}
.header-container .avatar img {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  object-fit: cover;
}

main {
  height: 100%;
  display: flex;
}
aside {
  width: var(--sidebar-width);
  border-left: 1px solid #555;
  height: calc(100vh - var(--header-height));
  position: fixed;
  right: 0;
  transition: 0.5s;
  z-index: 333;
}
aside.open {
  width: var(--sidebar-open-width);
}
aside.open + section {
  width: calc(100% - var(--sidebar-open-width));
}
aside ul {
  list-style-type: none;
}
aside ul li {
  font-size: 1.5rem;
  cursor: pointer;
  margin: 1rem 0;
  display: flex;
  justify-content: center;
  font-size: 2.5rem;
}
aside ul li a span i {
  color: var(--color-white);
}
main .content-page {
  width: calc(100% - var(--sidebar-width));
  background: #fff2;
  height: 100%;
  margin-right: auto;
  transition: 0.2s;
  padding: 32px 32px 0;
  text-align: right;
  overflow: auto;
  z-index: 22;
}
main .content-page p {
  line-height: 2.4;
}

.bi-list {
  color: var(--color-white);
}

.cntr {
  display: table;
  width: 100%;
  height: 100%;
}
.cntr .cntr-innr {
  display: table-cell;
  text-align: center;
  vertical-align: middle;
}
/*** STYLES ***/
.search-btn {
  display: inline-block;
  position: relative;
  height: 25px;
  width: 25px;
  box-sizing: border-box;
  border: 3px solid #ffffff;
  border-radius: 25px;
  transition: all 200ms ease;
  cursor: text;
}
.search-btn:after {
  content: "";
  position: absolute;
  width: 3px;
  height: 15px;
  right: -5px;
  top: 15px;
  background: #ffffff;
  border-radius: 3px;
  transform: rotate(-45deg);
  transition: all 200ms ease;
}
.search-btn.active,
.search-btn:hover {
  width: 200px;
  margin-right: 0px;
  height: 40px;
}
.search-btn.active:after,
.search-btn:hover:after {
  height: 0px;
}
.search-btn input {
  width: 100%;
  border: none;
  box-sizing: border-box;
  font-family: Helvetica;
  font-size: 15px;
  color: inherit;
  outline-width: 0px;
  border-radius: 25px;
  height: 100%;
  background-color: transparent;
  color: var(--color-white);
}
.left {
  display: flex;
  align-items: center;
}

.btn-toggle {
  position: relative;
  cursor: pointer;
}
.btn-toggle .bi-compass {
  font-size: 1.5em;
}
.toggle-drop {
  display: none;
  position: absolute;
  top: 60px;
  left: 0;
  width: 50px;
  background-color: #fff;
  box-shadow: 0 0 10px 2px #eee;
  padding: 15px;
  border-radius: 10px;
  z-index: 5555;
  height: 300px;
}

.btn-toggle ul {
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-direction: column;
  height: 100%;
}
.btn-toggle ul li {
  padding: 15px 0;
}
.btn-toggle ul li a {
  color: var(--dark-pink);
  transition: all 0.2s ease-in-out;
}
.btn-toggle ul li a:hover {
  color: #34283f;
  font-weight: 500;
  transition: all 0.2s ease-in-out;
}

.toggle-drop ul li a img {
  width: 45px;
  object-fit: cover;
  border-radius: 50%;
}

/* Main-Content */
.swiper {
  width: 100%;
  height: 100%;
  margin: 0 0 2rem 0;
  padding: 1rem 2rem 3rem;
}
.swiper-wrapper {
  color: var(--dark-pink);
}
.swiper-slide {
  text-align: center;
  font-size: 18px;
  /* Center slide text vertically */
  display: -webkit-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  align-items: center;
  border-radius: 10px;
  box-shadow: 0 0 10px 1px #eeeeee47;
}

.swiper-slide img {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 10px 10px 0 0;
}
.swiper-button-prev,
.swiper-rtl .swiper-button-next {
  left: 0;
  right: auto;
}
.swiper-button-next,
.swiper-rtl .swiper-button-prev {
  right: 0;
  left: auto;
}
.swiper-button-next:after,
.swiper-button-prev:after {
  font-size: 25px;
  font-weight: bolder;
  color: var(--color-white);
}
.swiper-pagination-bullet {
  width: var(
    --swiper-pagination-bullet-width,
    var(--swiper-pagination-bullet-size, 8px)
  );
  height: var(
    --swiper-pagination-bullet-height,
    var(--swiper-pagination-bullet-size, 8px)
  );
  display: inline-block;
  border-radius: 50%;
  background: #fff;
  opacity: unset;
}
.swiper-pagination-bullet-active {
  opacity: var(--swiper-pagination-bullet-opacity, 1);
  background: #ff00d4;
}
/* Main-Content */

.container-search {
  height: 30px;
  border-radius: 30px;
  display: flex;
  align-items: center;
  cursor: pointer;
  transition: 0.8s;
  box-shadow: 0 0 25px 0 rgba(0, 0, 0, 0.4);
}
.container-search:hover .input {
  width: 200px;
  background-color: #fff;
  border-radius: 30px;
  padding: 7px;
}
.container-search .input {
  background: transparent;
  border: none;
  outline: none;
  width: 0px;
  font-weight: 500;
  font-size: 16px;
  transition: 0.8s;
}

.container-search .btn .bi {
  color: #fff;
  font-size: 1.7em;
}

/* START TOOLTIP STYLES */
[tooltip] {
  position: relative; /* opinion 1 */
}

/* Applies to all tooltips */
[tooltip]::before,
[tooltip]::after {
  text-transform: none; /* opinion 2 */
  font-size: 14px; /* opinion 3 */
  line-height: 1;
  user-select: none;
  pointer-events: none;
  position: absolute;
  display: none;
  opacity: 0;
}
[tooltip]::before {
  content: "";
  border: 5px solid transparent; /* opinion 4 */
  z-index: 1001; /* absurdity 1 */
}
[tooltip]::after {
  content: attr(tooltip); /* magic! */

  /* most of the rest of this is opinion */
  font-family: Helvetica, IRANsans, sans-serif;
  text-align: center;

  /* 
    Let the content set the size of the tooltips 
    but this will also keep them from being obnoxious
    */
  min-width: 3em;
  max-width: 21em;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding: 10px;
  border-radius: 0.3ch;
  box-shadow: 0 1em 2em -0.5em rgba(0, 0, 0, 0.35);
  background: #333;
  color: #fff;
  z-index: 1000; /* absurdity 2 */
}

/* Make the tooltips respond to hover */
[tooltip]:hover::before,
[tooltip]:hover::after {
  display: block;
}

/* don't show empty tooltips */
[tooltip=""]::before,
[tooltip=""]::after {
  display: none !important;
}

/* FLOW: UP */
[tooltip]:not([flow])::before,
[tooltip][flow^="up"]::before {
  bottom: 100%;
  border-bottom-width: 0;
  border-top-color: #333;
}
[tooltip]:not([flow])::after,
[tooltip][flow^="up"]::after {
  bottom: calc(100% + 5px);
}
[tooltip]:not([flow])::before,
[tooltip]:not([flow])::after,
[tooltip][flow^="up"]::before,
[tooltip][flow^="up"]::after {
  left: 50%;
  transform: translate(-50%, -0.5em);
}

/* FLOW: DOWN */
[tooltip][flow^="down"]::before {
  top: 100%;
  border-top-width: 0;
  border-bottom-color: #333;
}
[tooltip][flow^="down"]::after {
  top: calc(100% + 5px);
}
[tooltip][flow^="down"]::before,
[tooltip][flow^="down"]::after {
  left: 50%;
  transform: translate(-50%, 0.5em);
}

/* FLOW: LEFT */
[tooltip][flow^="left"]::before {
  top: 50%;
  border-right-width: 0;
  border-left-color: #333;
  left: calc(0em - 12px);
  transform: translate(-0.5em, -50%);
}
[tooltip][flow^="left"]::after {
  top: 50%;
  right: calc(100% + 12px);
  transform: translate(-0.5em, -50%);
}

/* FLOW: RIGHT */
[tooltip][flow^="right"]::before {
  top: 50%;
  border-left-width: 0;
  border-right-color: #333;
  right: calc(0em - 5px);
  transform: translate(0.5em, -50%);
}
[tooltip][flow^="right"]::after {
  top: 50%;
  left: calc(100% + 5px);
  transform: translate(0.5em, -50%);
}

/* KEYFRAMES */
@keyframes tooltips-vert {
  to {
    opacity: 0.9;
    transform: translate(-50%, 0);
  }
}

@keyframes tooltips-horz {
  to {
    opacity: 0.9;
    transform: translate(0, -50%);
  }
}

/* FX All The Things */
[tooltip]:not([flow]):hover::before,
[tooltip]:not([flow]):hover::after,
[tooltip][flow^="up"]:hover::before,
[tooltip][flow^="up"]:hover::after,
[tooltip][flow^="down"]:hover::before,
[tooltip][flow^="down"]:hover::after {
  animation: tooltips-vert 300ms ease-out forwards;
}

[tooltip][flow^="left"]:hover::before,
[tooltip][flow^="left"]:hover::after,
[tooltip][flow^="right"]:hover::before,
[tooltip][flow^="right"]:hover::after {
  animation: tooltips-horz 300ms ease-out forwards;
}

/* figure-caption */
.figure-caption {
  background: var(--dark-pink);
  padding: 12px 8px;
  border-radius: 0 0 10px 10px;
  color: var(--color-white);
}
.figure-caption-flex {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
/* figure-caption */

.col-md-6 .swiper-slide {
  margin: 2rem 0;
}
.load-more {
  display: block;
  margin: 2rem 0;
}
.load-more a {
  background-color: var(--dark-pink);
  color: var(--color-white);
  border-radius: 10px;
  padding: 10px 25px;
}
.video-thumbnail {
  box-shadow: 0 0 10px 1px #eeeeee47;
  margin: 1rem 0;
}

.video-thumbnail img {
  width: 100%;
  border-radius: 10px 10px 0 0;
}

/* Video Section */
.video-section video {
  width: 100%;
  height: 100%;
}
.send-comment {
  color: var(--color-white);
  background-color: var(--dark-pink);
  padding: 10px 45px;
  border-radius: 10px;
  transition: all 0.2s ease-in-out;
}
.send-comment:hover {
  color: unset;
  box-shadow: 0 0 10px 1px #eeeeee47;
  transition: all 0.2s ease-in-out;
}
.Similar-comments {
  width: 100%;
  height: 250px;
  background-color: var(--color-white);
  color: var(--dark-pink);
  padding: 15px;
  margin: 4rem 0;
  border-radius: 5px;
}

.show-videoAll {
  background-color: var(--dark-pink);
  padding: 20px;
  border-radius: 10px;
}
.Similar-video {
  margin: 2rem 0;
}
.Similar-video .video-thumbnail {
  margin: 1rem 0;
  box-shadow: 0 0 10px 1px #eeeeee47;
  border-radius: 10px;
}
/* Video Section */

.fa-plus,
.fa-bars {
  margin-top: 15px;
}

/* Loader */
.loader-section {
  position: fixed;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  width: 100%;
  background-color: var(--dark-pink);
  animation: animatebg 10s linear infinite;
  z-index: 9999999;
}
@keyframes animatebg {
  0% {
    filter: hue-rotate(0deg);
  }
  100% {
    filter: hue-rotate(360deg);
  }
}
.loader {
  position: relative;
  width: 150px;
  height: 150px;
}
.loader span {
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
  transform: rotate(calc(18deg * var(--i)));
}
.loader span::before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  width: 15px;
  height: 15px;
  border-radius: 50%;
  background-color: red;
  box-shadow: 0 0 10px red, 0 0 20px red, 0 0 30px red, 0 0 40px red,
    0 0 50px red;
  animation: animate 2s linear infinite;
  animation-delay: calc(0.1s * var(--i));
}
@keyframes animate {
  0% {
    transform: scale(1);
  }
  80%,
  100% {
    transform: scale(0);
  }
}
/* Loader */

@media (min-width: 768px) {
  .menu__toggle {
    display: none;
  }
  .show-videoAll-res {
    display: none !important;
  }
  .show-videoAll {
    display: block;
  }
}

@media (max-width: 767px) {
  aside {
    display: none;
    border: none;
    width: unset;
  }
  main .content-page {
    width: 100%;
  }
  .right,
  .left {
    display: none !important;
  }
  .header-container {
    justify-content: center;
  }
  .bi-list::before {
    font-weight: bold !important;
    font-size: 20px;
  }
  .video-thumbnail-res {
    width: 49%;
  }
  .show-videoAll {
    display: none;
  }
  .show-videoAll-res {
    display: block;
    margin: 1rem 0;
  }
}

@media (max-width: 500px) {
  .video-thumbnail-res {
    width: 100%;
  }
}

/*
!!! This demo is being refactored !!!

-- add auto focus on the first item of the navigation when it is shown
-- replace .menu:not(.menu_activated) .menu__list{  display: none; } to hidden
-- use :is pseudo-class to simplify selectors 

*/
/*
=====
DEPENDENCES
=====
*/

/* The component will reset button browser styles */

.r-button {
  --uirButtonBackgroundColor: var(--rButtonBackgroundColor, transparent);
  --uirButtonPadding: var(
    --rButtonPadding,
    var(--rButtonPaddingTop, 0) var(--rButtonPaddingRight, 0)
      var(--rButtonPaddingBottom, 0) var(--rButtonPaddingLeft, 0)
  );
  --uirButtonBorderWidth: var(--rButtonBorderWidth, 0);
  --uirButtonBorderStyle: var(--rButtonBorderStyle, solid);
  --uirButtonBorderColor: var(--rButtonBorderColor, currentColor);
  --uirButtonFontFamily: var(--rButtonFontFamily, inherit);
  --uirButtonFontSize: var(--rButtonFontSize, inherit);
  --uirButtonColor: var(--rButtonColor);

  background-color: var(--uirButtonBackgroundColor);
  padding: var(--uirButtonPadding);

  border-width: var(--uirButtonBorderWidth);
  border-style: var(--uirButtonBorderStyle);
  border-color: var(--uirButtonBorderColor);

  cursor: pointer;

  font-family: var(--uirButtonFontFamily);
  font-size: var(--uirButtonFontSize);
}

.r-button::-moz-focus-inner,
.r-button[type="button"]::-moz-focus-inner,
.r-button[type="reset"]::-moz-focus-inner,
.r-button[type="submit"]::-moz-focus-inner {
  /* Remove the inner border and padding in Firefox. */

  border-style: none;
  padding: 0;
}

/* The component will reset browser's styles of link */

.r-link {
  --uirLinkDisplay: var(--rLinkDisplay, inline-flex);
  --uirLinkTextColor: var(--rLinkTextColor);
  --uirLinkTextDecoration: var(--rLinkTextDecoration, none);

  display: var(--uirLinkDisplay) !important;
  color: var(--uirLinkTextColor) !important;
  text-decoration: var(--uirLinkTextDecoration) !important;
}

/* The component will reset browser's styles of list */

.r-list {
  --uirListPaddingLeft: var(--rListPaddingLeft, 0);
  --uirListMarginTop: var(--rListMarginTop, 0);
  --uirListMarginBottom: var(--rListMarginBottom, 0);
  --uirListListStyle: var(--rListListStyle, none);

  padding-left: var(--uirListPaddingLeft) !important;
  margin-top: var(--uirListMarginTop) !important;
  margin-bottom: var(--uirListMarginBottom) !important;
  list-style: var(--uirListListStyle) !important;
}

/* Basic styles of the hamburger component */

.m-hamburger {
  --uiHamburgerThickness: var(--hamburgerThickness, 4px);

  display: var(--hamburgerDisplay, inline-flex);
  width: var(--hamburgerWidth, 28px);
  height: var(--hamburgerHeight, 20px);

  position: relative;
}

.m-hamburger::before,
.m-hamburger::after,
.m-hamburger__label {
  width: 100%;
  height: var(--uiHamburgerThickness);
  border-radius: var(--hamburgerBorderRadius, 5px);
  background-color: var(--hamburgerBackgroundColor, currentColor);

  position: absolute;
  left: 0;
}

.m-hamburger::before,
.m-hamburger::after {
  content: "";
}

.m-hamburger::before {
  top: 0;
}

.m-hamburger::after {
  bottom: 0;
}

.m-hamburger__label {
  /* The calculation of middle hamburger button line position */

  top: calc(50% - calc(var(--uiHamburgerThickness) / 2));
}

/* helper to hide elements that are available only for screen readers. */

.screen-reader {
  width: var(--screenReaderWidth, 1px) !important;
  height: var(--screenReaderHeight, 1px) !important;
  padding: var(--screenReaderPadding, 0) !important;
  border: var(--screenReaderBorder, none) !important;

  position: var(--screenReaderPosition, absolute) !important;
  clip: var(--screenReaderClip, rect(1px, 1px, 1px, 1px)) !important;
  overflow: var(--screenReaderOverflow, hidden) !important;
}

/*
=====
MENU STYLES
=====
*/

.menu {
  --uiMenuCircleSize: var(--menuCircleSize, 6.25rem);
  --uiMenuCircleOffset: var(--menuCircleOffset, 1rem);
  --uiMenuCircleHeight: calc(var(--uiMenuCircleSize) / 2);
  --uiMenuCircleBackgroundColor: var(--menuCircleBackgroundColor, currentColor);

  --uiMenuHamburgerWidth: var(--menuHamburgerWidth, 1.75rem);
  --uiMenuHamburgerHeight: var(--menuHamburgerHeight, 1.25rem);

  --rButtonPaddingTop: calc(
    var(--uiMenuCircleHeight) - var(--uiMenuHamburgerHeight) -
      var(--uiMenuCircleOffset)
  );

  --hamburgerWidth: var(--uiMenuHamburgerWidth);
  --hamburgerHeight: var(--uiMenuHamburgerHeight);
  --hamburgerBackgroundColor: var(--menuHamburgerBackgroundColor, #fff);

  width: 100%;

  display: flex;
  flex-direction: column;
  align-items: center;

  position: fixed;
  bottom: 0;
  left: 0;
  z-index: var(--menuZindex, 9998);
}

.menu__nav {
  box-sizing: border-box;
  width: 100%;
  height: 0;
  transition: opacity 0.2s ease-out;
  opacity: 0;
  display: flex;
  align-items: flex-start;
  z-index: 2;
}

.menu__list {
  width: 100%;
  max-height: 100%;

  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}

.menu__toggle {
  box-sizing: border-box;
  width: var(--uiMenuCircleSize);
  height: var(--uiMenuCircleHeight);
  flex: none;

  position: relative;
}

.menu__toggle::before {
  /*
  1. The font-size property is used to simplify calculations of the element's sizes and position
  2. The negative value for the bottom property need for hiding half of circle. 
  */

  content: "";
  width: 1em;
  height: 1em;
  font-size: var(--uiMenuCircleSize); /* 1 */

  background-color: var(--uiMenuCircleBackgroundColor);
  border-radius: 50%;

  position: absolute;
  bottom: -0.5em; /* 2 */
  left: calc(50% - 0.5em);
  z-index: -1;

  will-change: width, height;
  transition: transform 0.25s cubic-bezier(0.04, -0.1, 0.29, 0.98),
    width 0.25s cubic-bezier(0.04, -0.1, 0.29, 0.98),
    height 0.25s cubic-bezier(0.04, -0.1, 0.29, 0.98);
}

/* styles of hamburger's animation */

.m-hamburger::before,
.m-hamburger::after,
.m-hamburger__label {
  transition-timing-function: ease;
  transition-duration: 0.15s;
}

.m-hamburger::before,
.m-hamburger::after {
  transition-property: transform;
}

.m-hamburger__label {
  transition-property: transform, opacity;
}

/*
=====
MENU STATES
=====
*/

.menu__toggle:focus {
  outline: var(--menuHaburgerOutlineOWidth, 2px) solid
    var(--menuHaburgerOutlineColor);
  outline-offset: var(--menuHaburgerOutlineOffset, 5px);
}

.menu_activated {
  height: 89%;
}

.menu_activated .menu__nav {
  flex-grow: 1;
  opacity: 1;

  will-change: opacity;
  transition-duration: 0.2s;
  transition-delay: 0.3s;
}

.menu_activated .menu__toggle::before {
  width: 100vmax;
  height: 100vmax;
  transform: translate3d(-50vh, -50vh, 0) scale(5);
  transition-duration: 1s;
}

.menu:not(.menu_activated) .menu__list {
  display: none;
}

.menu_activated .m-hamburger::before {
  top: 50%;
  transform: translate3d(0, -50%, 0) rotate(45deg);
}

.menu_activated .m-hamburger::after {
  transform: translate3d(0, -50%, 0) rotate(135deg);
  top: 50%;
}

.menu_activated .m-hamburger__label {
  transform: rotate(-45deg) translate3d(-0.285em, -0.3em, 0);
  opacity: 0;
}

/*
=====
SETTINGS
=====
*/

:root {
  --colorWhite: #fff;
  --colorMain: #34283F;
  --menuCircleBackgroundColor: var(--colorMain);
  --menuHamburgerBackgroundColor: var(--colorWhite);
  --menuHaburgerOutlineColor: var(--colorMain);
}

.menu_activated {
  --menuHaburgerOutlineColor: var(--colorWhite);
}

/*
=====
DEMO
=====
*/

 

.page {
  max-width: 380px;
  padding: 1rem;
  margin: auto;
  text-align: center;
}

.page__name {
  display: block;
  font-size: 2rem;
  font-weight: 700;
}

.page__hint {
  display: block;
  line-height: 1.45;
  margin-top: 1rem;
}

.menu__group {
  --rLinkTextColor: var(--colorWhite);
  text-align: center;
  padding: 0.5rem 2rem;
  font-size: 2rem;
  font-weight: 700;
  text-transform: uppercase;
}

.linktr {
  order: -1;
  padding: 1.75rem;
  text-align: center;
}

.linktr__goal {
  background-color: rgb(209, 246, 255);
  color: rgb(8, 49, 112);
  box-shadow: rgb(8 49 112 / 24%) 0px 2px 8px 0px;
  border-radius: 2rem;
  padding: 0.5rem 1.25rem;
}

@media (min-width: 1024px) {
  .linktr {
    position: absolute;
    right: 1rem;
    bottom: 1rem;
  }
}
.right-menu img {
  width: 55px;
  height: 55px;
  border-radius: 50%;
  object-fit: cover;
}

.right-menu .user-info {
  font-size: 14px;
}

#cover {
  width: 50%;
  margin: auto;
}
.item-menu-res .r-link {
  position: relative;
  display: flex !important;
  flex-direction: column;
  align-items: center; 
}
.item-menu-res .r-link p {
  line-height: unset;
  font-size: 14px;
}
.item-menu-res .menu__group {
  position: relative;
}
.item-menu-res .menu__group::after {
    content: '';
  position: absolute;
  bottom: 0;
  right: 0;
  width: 100%;
  border: 1px solid #ffffff29;
}

.item-menu-res .col-6:first-child {
  border-left:2px solid #ffffff29;
  width: 100%;
  height: 100%;
  margin: 2rem 0;
}